name: dev-cd.yml

on:
  push:
    branches:
      - main   # main 브랜치 푸시 시 배포

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 세팅 (Spring Boot 빌드용)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Gradle 캐시
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Spring Boot JAR 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. EC2에 JAR 업로드 (scp)
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app"

      # 6. EC2에서 배포 스크립트 실행 (ssh)
      - name: Execute deploy script
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/app
            chmod +x deploy.sh
            ./deploy.sh
